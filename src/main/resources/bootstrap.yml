# nacos 实现配置中心
server:
  port: 9011
jasypt:
  encryptor:
    bootstrap: false
spring:
  application:
    name: im-gateway
  profiles:
    active: dev
  cloud:
#    inetutils:
#      preferred-networks: 192.168.7.134  ##如果服务实例所在的环境存在多个IP，使用该配置可指定IP
#    service-registry:
#      auto-registration:
#        enabled: true
    nacos:
      discovery:
        enabled: true
        server-addr: 114.132.77.125:8848 # 注册中心
        group: IM_GROUP
      config:
        enabled: true
        server-addr: 114.132.77.125:8848 # 配置中心
        file-extension: yml # 与nacos的配置文件格式相同
        group: IM_GROUP

# zookeeper 方式做注册中心
#spring:
#  profiles:
#    active: dev
#  application:
#    name: gateway-server
#  cloud:
#    zookeeper:
#      connect-string: 127.0.0.1:2181
##      config:
##        enabled: true
##        root: /server/config
##        profileSeparator: "-" #这是与环境连接的分隔符，如现在配置的是dev环境，那么加载的配置文件名称就是/discovery/config/product,dev  /discovery/config/product /discovery/application,dev  /discovery/application 优先级是环境，其次是spring.application.name然后再是 defaultContext，defaultContext是用来做默认配置的，用于比如全局的通用信息等等
##        defaultContext: ${spring.application.name} #这是默认加载的命名空间
##        watcher:
##          enabled: true
#      discovery:
#        root: /server
#        # register: false
#    gateway:
#      routes: #数组形式
#        - id: gateway-id  #路由唯一标识
#          uri: lb://chat-netty-server  #想要转发到的地址
#          order: 1 #优先级，数字越小优先级越高
#          predicates: #断言 配置哪个路径才转发
#            - Path=/websocket
#          filters: #过滤器，请求在传递过程中通过过滤器修改
#            - StripPrefix=1  #去掉第一层前缀
#server:
#  port: 9012
#management:
#  endpoints:
#    web:
#      #base-path: "/actuator"
#      exposure:
#        include: "*"